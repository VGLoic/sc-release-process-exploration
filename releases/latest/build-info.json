{
  "id": "c0a45c6db4e0232df777c56509bb6505",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.13",
  "solcLongVersion": "0.8.13+commit.abaa5c0e",
  "input": {
    "language": "Solidity",
    "sources": {
      "src/Counter.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport {IncrementOracle} from \"./IncrementOracle.sol\";\n\ncontract Counter {\n    uint256 public counter;\n\n    function increment() public {\n        uint256 incrementAmount = IncrementOracle.getIncrement();\n        counter += incrementAmount * 3;\n    }\n}\n"
      },
      "src/IncrementOracle.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nlibrary IncrementOracle {\n    function getIncrement() external pure returns (uint256) {\n        return 2;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": { "enabled": true, "runs": 200 },
      "evmVersion": "london",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": ["ast"]
        }
      },
      "metadata": { "useLiteralContent": true }
    }
  },
  "output": {
    "sources": {
      "src/Counter.sol": {
        "ast": {
          "absolutePath": "src/Counter.sol",
          "exportedSymbols": { "Counter": [22], "IncrementOracle": [33] },
          "id": 23,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": ["solidity", "0.8", ".13"],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "absolutePath": "src/IncrementOracle.sol",
              "file": "./IncrementOracle.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 23,
              "sourceUnit": 34,
              "src": "57:54:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IncrementOracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33,
                    "src": "65:15:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Counter",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 22,
              "linearizedBaseContracts": [22],
              "name": "Counter",
              "nameLocation": "122:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "61bc221a",
                  "id": 5,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "151:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "136:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 20,
                    "nodeType": "Block",
                    "src": "193:113:0",
                    "statements": [
                      {
                        "assignments": [9],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9,
                            "mutability": "mutable",
                            "name": "incrementAmount",
                            "nameLocation": "211:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 20,
                            "src": "203:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 8,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "203:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 13,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 10,
                              "name": "IncrementOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "229:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IncrementOracle_$33_$",
                                "typeString": "type(library IncrementOracle)"
                              }
                            },
                            "id": 11,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getIncrement",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32,
                            "src": "229:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "229:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "203:56:0"
                      },
                      {
                        "expression": {
                          "id": 18,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 14,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "269:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 15,
                              "name": "incrementAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "280:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "33",
                              "id": 16,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "298:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "src": "280:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "269:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 19,
                        "nodeType": "ExpressionStatement",
                        "src": "269:30:0"
                      }
                    ]
                  },
                  "functionSelector": "d09de08a",
                  "id": 21,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increment",
                  "nameLocation": "174:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "183:2:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "193:0:0"
                  },
                  "scope": 22,
                  "src": "165:141:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 23,
              "src": "113:195:0",
              "usedErrors": []
            }
          ],
          "src": "32:277:0"
        },
        "id": 0
      },
      "src/IncrementOracle.sol": {
        "ast": {
          "absolutePath": "src/IncrementOracle.sol",
          "exportedSymbols": { "IncrementOracle": [33] },
          "id": 34,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 24,
              "literals": ["solidity", "0.8", ".13"],
              "nodeType": "PragmaDirective",
              "src": "32:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IncrementOracle",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 33,
              "linearizedBaseContracts": [33],
              "name": "IncrementOracle",
              "nameLocation": "65:15:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "143:25:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "32",
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "160:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "functionReturnParameters": 28,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "153:8:1"
                      }
                    ]
                  },
                  "functionSelector": "6ac4691f",
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getIncrement",
                  "nameLocation": "96:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "108:2:1"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "134:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "134:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "133:9:1"
                  },
                  "scope": 33,
                  "src": "87:81:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 34,
              "src": "57:113:1",
              "usedErrors": []
            }
          ],
          "src": "32:139:1"
        },
        "id": 1
      }
    },
    "contracts": {
      "src/Counter.sol": {
        "Counter": {
          "abi": [
            {
              "inputs": [],
              "name": "counter",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "increment",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {
                "src/IncrementOracle.sol": {
                  "IncrementOracle": [{ "length": 20, "start": 132 }]
                }
              },
              "object": "608060405234801561001057600080fd5b50610190806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806361bc221a1461003b578063d09de08a14610056575b600080fd5b61004460005481565b60405190815260200160405180910390f35b61005e610060565b005b600073__$afba29b198a3993f21def06ffb1287929b$__636ac4691f6040518163ffffffff1660e01b8152600401602060405180830381865af41580156100ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cf91906100f4565b90506100dc816003610123565b6000808282546100ec9190610142565b909155505050565b60006020828403121561010657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561013d5761013d61010d565b500290565b600082198211156101555761015561010d565b50019056fea2646970667358221220973b73491de7a9cd9f1035d81489a3e72b6eec47e84346bf1e95facd559173b164736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x56 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x6AC4691F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xF4 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC DUP2 PUSH1 0x3 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13D JUMPI PUSH2 0x13D PUSH2 0x10D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x155 JUMPI PUSH2 0x155 PUSH2 0x10D JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 EXTCODESIZE PUSH20 0x491DE7A9CD9F1035D81489A3E72B6EEC47E84346 0xBF 0x1E SWAP6 STATICCALL 0xCD SSTORE SWAP2 PUSH20 0xB164736F6C634300080D00330000000000000000 ",
              "sourceMap": "113:195:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@counter_5": {
                  "entryPoint": null,
                  "id": 5,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@increment_21": {
                  "entryPoint": 96,
                  "id": 21,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 244,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 322,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 291,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 269,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:820:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:76:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:25:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:2",
                            "type": ""
                          }
                        ],
                        "src": "14:177:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "277:103:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "323:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "332:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "335:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "325:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "325:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "325:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "298:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "307:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "294:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "294:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "319:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "290:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "290:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "287:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "348:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "358:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "358:16:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "348:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "243:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "254:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "266:6:2",
                            "type": ""
                          }
                        ],
                        "src": "196:184:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "417:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "434:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "441:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "446:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "437:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "437:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "427:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "427:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "427:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "474:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "477:4:2",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "467:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "467:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "467:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "498:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "501:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "491:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "491:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "491:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "385:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "569:116:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "628:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "630:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "630:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "630:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "600:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "593:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "593:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "586:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "586:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "608:1:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "619:1:2",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "615:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "615:6:2"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "623:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "611:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "611:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "605:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "605:21:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "582:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "582:45:2"
                              },
                              "nodeType": "YulIf",
                              "src": "579:71:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "659:20:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "674:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "677:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "670:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "670:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "659:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "548:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "551:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "557:7:2",
                            "type": ""
                          }
                        ],
                        "src": "517:168:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "738:80:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "765:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "767:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "767:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "767:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "754:1:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "761:1:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "757:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "757:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "751:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "751:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "748:39:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "796:16:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "807:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "810:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "803:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "803:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "796:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "721:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "724:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "730:3:2",
                            "type": ""
                          }
                        ],
                        "src": "690:128:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {
                "src/IncrementOracle.sol": {
                  "IncrementOracle": [{ "length": 20, "start": 100 }]
                }
              },
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806361bc221a1461003b578063d09de08a14610056575b600080fd5b61004460005481565b60405190815260200160405180910390f35b61005e610060565b005b600073__$afba29b198a3993f21def06ffb1287929b$__636ac4691f6040518163ffffffff1660e01b8152600401602060405180830381865af41580156100ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cf91906100f4565b90506100dc816003610123565b6000808282546100ec9190610142565b909155505050565b60006020828403121561010657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561013d5761013d61010d565b500290565b600082198211156101555761015561010d565b50019056fea2646970667358221220973b73491de7a9cd9f1035d81489a3e72b6eec47e84346bf1e95facd559173b164736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61BC221A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x56 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x44 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x60 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x6AC4691F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCF SWAP2 SWAP1 PUSH2 0xF4 JUMP JUMPDEST SWAP1 POP PUSH2 0xDC DUP2 PUSH1 0x3 PUSH2 0x123 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13D JUMPI PUSH2 0x13D PUSH2 0x10D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x155 JUMPI PUSH2 0x155 PUSH2 0x10D JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 EXTCODESIZE PUSH20 0x491DE7A9CD9F1035D81489A3E72B6EEC47E84346 0xBF 0x1E SWAP6 STATICCALL 0xCD SSTORE SWAP2 PUSH20 0xB164736F6C634300080D00330000000000000000 ",
              "sourceMap": "113:195:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;136:22;;;;;;;;;160:25:2;;;148:2;133:18;136:22:0;;;;;;;165:141;;;:::i;:::-;;;203:23;229:15;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;203:56;-1:-1:-1;280:19:0;203:56;298:1;280:19;:::i;:::-;269:7;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;;165:141:0:o;196:184:2:-;266:6;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;-1:-1:-1;358:16:2;;196:184;-1:-1:-1;196:184:2:o;385:127::-;446:10;441:3;437:20;434:1;427:31;477:4;474:1;467:15;501:4;498:1;491:15;517:168;557:7;623:1;619;615:6;611:14;608:1;605:21;600:1;593:9;586:17;582:45;579:71;;;630:18;;:::i;:::-;-1:-1:-1;670:9:2;;517:168::o;690:128::-;730:3;761:1;757:6;754:1;751:13;748:39;;;767:18;;:::i;:::-;-1:-1:-1;803:9:2;;690:128::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "80000",
                "executionCost": "129",
                "totalCost": "80129"
              },
              "external": { "counter()": "2261", "increment()": "infinite" }
            },
            "methodIdentifiers": {
              "counter()": "61bc221a",
              "increment()": "d09de08a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Counter.sol\":\"Counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Counter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nimport {IncrementOracle} from \\\"./IncrementOracle.sol\\\";\\n\\ncontract Counter {\\n    uint256 public counter;\\n\\n    function increment() public {\\n        uint256 incrementAmount = IncrementOracle.getIncrement();\\n        counter += incrementAmount * 3;\\n    }\\n}\\n\",\"keccak256\":\"0x9d147716240b1de96d689ad7f64a86e1d436b544f61e6a86b41d1833b546db70\",\"license\":\"MIT\"},\"src/IncrementOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nlibrary IncrementOracle {\\n    function getIncrement() external pure returns (uint256) {\\n        return 2;\\n    }\\n}\\n\",\"keccak256\":\"0xfc08e8764f961edf3fd2a18924b30201fba40c82fecf0bc8c0cfea98ae75c4d8\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 5,
                "contract": "src/Counter.sol:Counter",
                "label": "counter",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      },
      "src/IncrementOracle.sol": {
        "IncrementOracle": {
          "abi": [
            {
              "inputs": [],
              "name": "getIncrement",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6082610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80636ac4691f146038575b600080fd5b600260405190815260200160405180910390f3fea264697066735822122046419488527d9b0ae00f339a2a9115c6a4ce67772ec0e9f7d722f13ef315d1f264736f6c634300080d0033",
              "opcodes": "PUSH1 0x82 PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC4691F EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID COINBASE SWAP5 DUP9 MSTORE PUSH30 0x9B0AE00F339A2A9115C6A4CE67772EC0E9F7D722F13EF315D1F264736F6C PUSH4 0x4300080D STOP CALLER ",
              "sourceMap": "57:113:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:113:1;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getIncrement_32": {
                  "entryPoint": null,
                  "id": 32,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:201:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "123:76:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "133:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "145:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "156:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "141:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "141:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "175:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "186:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "168:25:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "92:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "103:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "114:4:2",
                            "type": ""
                          }
                        ],
                        "src": "14:185:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80636ac4691f146038575b600080fd5b600260405190815260200160405180910390f3fea264697066735822122046419488527d9b0ae00f339a2a9115c6a4ce67772ec0e9f7d722f13ef315d1f264736f6c634300080d0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC4691F EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID COINBASE SWAP5 DUP9 MSTORE PUSH30 0x9B0AE00F339A2A9115C6A4CE67772EC0E9F7D722F13EF315D1F264736F6C PUSH4 0x4300080D STOP CALLER ",
              "sourceMap": "57:113:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;87:81;160:1;87:81;;168:25:2;;;156:2;141:18;87:81:1;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "26000",
                "executionCost": "112",
                "totalCost": "26112"
              },
              "external": { "getIncrement()": "130" }
            },
            "methodIdentifiers": { "getIncrement()": "6ac4691f" }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getIncrement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IncrementOracle.sol\":\"IncrementOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/IncrementOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.13;\\n\\nlibrary IncrementOracle {\\n    function getIncrement() external pure returns (uint256) {\\n        return 2;\\n    }\\n}\\n\",\"keccak256\":\"0xfc08e8764f961edf3fd2a18924b30201fba40c82fecf0bc8c0cfea98ae75c4d8\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": { "storage": [], "types": null },
          "userdoc": { "kind": "user", "methods": {}, "version": 1 }
        }
      }
    }
  }
}
